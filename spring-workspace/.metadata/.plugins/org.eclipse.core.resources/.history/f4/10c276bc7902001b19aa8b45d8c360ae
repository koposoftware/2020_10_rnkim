{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# -*- coding: utf-8 -*-\n",
    "def outliers_iqr(ys):\n",
    "    import numpy as np\n",
    "    \n",
    "    quartile_1, quartile_3 = np.percentile(ys, [25, 75])\n",
    "    iqr = quartile_3 - quartile_1\n",
    "    lower_bound = quartile_1 - (iqr * 1.5)\n",
    "    upper_bound = quartile_3 + (iqr * 1.5)\n",
    "    return np.where((ys > upper_bound) | (ys < lower_bound))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# -*- coding: utf-8 -*-\n",
    "def get_interest_ml(param_busi_profits, param_net_incm, param_ttl_liab, param_credit_rnk):\n",
    "    \n",
    "# 1. \n",
    "    import pandas as pd\n",
    "    import numpy as np\n",
    "    import cx_Oracle\n",
    "    from sklearn.preprocessing import MinMaxScaler\n",
    "    \n",
    "    \n",
    "    import os\n",
    "    os.putenv('NLS_LANG', '.UTF8')\n",
    "\n",
    "    connection = cx_Oracle.connect('SCOTT','tiger','localhost:1521/orcl')\n",
    "    cursor = connection.cursor()\n",
    "\n",
    "    query = \"\"\"\n",
    "       select *\n",
    "       from MLTBL\"\"\"\n",
    "\n",
    "    df = pd.read_sql(query, con=connection)\n",
    "\n",
    "# 2.\n",
    "    new_data = {'BUSI_PROFITS':param_busi_profits, 'NET_INCM':param_net_incm, 'TTL_LIAB':param_ttl_liab, 'CREDIT_RNK':param_credit_rnk}\n",
    "    df2 = df.append(new_data, ignore_index=True)\n",
    "\n",
    "    df3 = df2.drop(['INTEREST', 'CREDIT_RNK'], axis=1)\n",
    "    scaler = MinMaxScaler(feature_range=(0,1))\n",
    "    df3 = scaler.fit_transform(df3)\n",
    "    \n",
    "    df3 = pd.DataFrame(data=df3, columns=['BUSI_PROFITS', 'NET_INCM', 'TTL_LIAB'])\n",
    "\n",
    "    credit_rnk_col = df2['CREDIT_RNK']\n",
    "    interest_col = df2['INTEREST']\n",
    "    df3['CREDIT_RNK'] = credit_rnk_col\n",
    "    df3['INTEREST'] = interest_col\n",
    "\n",
    "# 3. \n",
    "    interest = 1.7 * df3.tail(1).TTL_LIAB + 0.1 * df3.tail(1).CREDIT_RNK + 0.1 * df3.tail(1).BUSI_PROFITS - 1.7 * df3.tail(1).NET_INCM + 1.8907794447627233\n",
    "    interest = round(interest, 2)\n",
    "    cursor.close()\n",
    "    connection.close()\n",
    "    return interest\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
